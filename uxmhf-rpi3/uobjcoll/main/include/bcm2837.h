/*
 * @UBERXMHF_LICENSE_HEADER_START@
 *
 * uber eXtensible Micro-Hypervisor Framework (Raspberry Pi)
 *
 * Copyright 2018 Carnegie Mellon University. All Rights Reserved.
 *
 * NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING
 * INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON
 * UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED,
 * AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR
 * PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF
 * THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE ANY WARRANTY OF
 * ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT
 * INFRINGEMENT.
 *
 * Released under a BSD (SEI)-style license, please see LICENSE or
 * contact permission@sei.cmu.edu for full terms.
 *
 * [DISTRIBUTION STATEMENT A] This material has been approved for public
 * release and unlimited distribution.  Please see Copyright notice for
 * non-US Government use and distribution.
 *
 * Carnegie Mellon is registered in the U.S. Patent and Trademark Office by
 * Carnegie Mellon University.
 *
 * @UBERXMHF_LICENSE_HEADER_END@
 */

/*
 * Author: Amit Vasudevan (amitvasudevan@acm.org)
 *
 */

/*
	broadcom 2837 (raspberry pi 3) definitions

	author: amit vasudevan (amitvasudevan@acm.org)
*/

#ifndef __BCM2837_H__
#define __BCM2837_H__

#define BCM2837_PERIPHERALS_BASE	0x3f000000
#define ARMLOCALREGISTERS_BASE		0x40000000
#define BCM2837_MAXCPUS				4

#define BCM2837_VIDEOCORE_GPU_MAILBOX_BASE  	(BCM2837_PERIPHERALS_BASE+0x0000B880)


// ARM  and VideoCore GPU interface Mailbox 
#define MAILBOX_READ_REG      					(BCM2837_VIDEOCORE_GPU_MAILBOX_BASE+0x0)
#define MAILBOX_POLL_REG      					(BCM2837_VIDEOCORE_GPU_MAILBOX_BASE+0x10)
#define MAILBOX_SENDER_REG    					(BCM2837_VIDEOCORE_GPU_MAILBOX_BASE+0x14)
#define MAILBOX_STATUS_REG    					(BCM2837_VIDEOCORE_GPU_MAILBOX_BASE+0x18)
#define MAILBOX_CONFIG_REG    					(BCM2837_VIDEOCORE_GPU_MAILBOX_BASE+0x1C)
#define MAILBOX_WRITE_REG     					(BCM2837_VIDEOCORE_GPU_MAILBOX_BASE+0x20)
#define MAILBOX_RESPONSE   						0x80000000
#define MAILBOX_FULL       						0x80000000
#define MAILBOX_EMPTY      						0x40000000
#define MAILBOX_MAXBUFSIZE						36


//////
// ARM core local peripherals
//////
#define ARMLOCALREGISTERS_MAILBOXWRITE_BASE		(ARMLOCALREGISTERS_BASE + 0x80)
#define ARMLOCALREGISTERS_MAILBOXREADCLEAR_BASE	(ARMLOCALREGISTERS_BASE + 0xC0)

#define LOCAL_TIMER_INT_CONTROL0				(ARMLOCALREGISTERS_BASE + 0x40)


//GPIO registers
#define GPIO_BASE       (BCM2837_PERIPHERALS_BASE+0x00200000)
#define GPFSEL1         (BCM2837_PERIPHERALS_BASE+0x00200004)
#define GPPUD           (BCM2837_PERIPHERALS_BASE+0x00200094)
#define GPPUDCLK0       (BCM2837_PERIPHERALS_BASE+0x00200098)

//Auxillary registers control
#define AUX_ENABLES     (BCM2837_PERIPHERALS_BASE+0x00215004)

//Auxillary registers -- Mini UART
#define AUX_MU_IO_REG   (BCM2837_PERIPHERALS_BASE+0x00215040)
#define AUX_MU_IER_REG  (BCM2837_PERIPHERALS_BASE+0x00215044)
#define AUX_MU_IIR_REG  (BCM2837_PERIPHERALS_BASE+0x00215048)
#define AUX_MU_LCR_REG  (BCM2837_PERIPHERALS_BASE+0x0021504C)
#define AUX_MU_MCR_REG  (BCM2837_PERIPHERALS_BASE+0x00215050)
#define AUX_MU_LSR_REG  (BCM2837_PERIPHERALS_BASE+0x00215054)
#define AUX_MU_MSR_REG  (BCM2837_PERIPHERALS_BASE+0x00215058)
#define AUX_MU_SCRATCH  (BCM2837_PERIPHERALS_BASE+0x0021505C)
#define AUX_MU_CNTL_REG (BCM2837_PERIPHERALS_BASE+0x00215060)
#define AUX_MU_STAT_REG (BCM2837_PERIPHERALS_BASE+0x00215064)
#define AUX_MU_BAUD_REG (BCM2837_PERIPHERALS_BASE+0x00215068)



// PL011 UART registers
#define PL011_UART_DR_REG			(BCM2837_PERIPHERALS_BASE+0x00201000)	//data 
#define PL011_UART_RSRECR_REG		(BCM2837_PERIPHERALS_BASE+0x00201004)	//receive status
#define PL011_UART_FR_REG 			(BCM2837_PERIPHERALS_BASE+0x00201018)	//flag 
#define PL011_UART_IBRD_REG			(BCM2837_PERIPHERALS_BASE+0x00201024)	//integer baud rate divisior
#define PL011_UART_FBRD_REG			(BCM2837_PERIPHERALS_BASE+0x00201028)	//fractional baud rate divisior
#define PL011_UART_LCR_REG			(BCM2837_PERIPHERALS_BASE+0x0020102c)	//line control
#define PL011_UART_CR_REG			(BCM2837_PERIPHERALS_BASE+0x00201030)	//control register
#define PL011_UART_IFLS_REG			(BCM2837_PERIPHERALS_BASE+0x00201034)	//interrupt FIFO level select
#define PL011_UART_IMSC_REG			(BCM2837_PERIPHERALS_BASE+0x00201038)	//interrupt mask set/clear
#define PL011_UART_RIS_REG			(BCM2837_PERIPHERALS_BASE+0x0020103c)	//raw interrupt status
#define PL011_UART_MIS_REG			(BCM2837_PERIPHERALS_BASE+0x00201040)	//masked interrupt status
#define PL011_UART_ICR_REG			(BCM2837_PERIPHERALS_BASE+0x00201044)	//interrupt clear
#define PL011_UART_DMACR_REG		(BCM2837_PERIPHERALS_BASE+0x00201048)	//dma control











//DMA controller
#define BCM2837_DMA0_REGS_BASE	(BCM2837_PERIPHERALS_BASE + 0x00007000)
#define BCM2837_DMA1_REGS_BASE	(BCM2837_PERIPHERALS_BASE + 0x00007100)
#define BCM2837_DMA2_REGS_BASE	(BCM2837_PERIPHERALS_BASE + 0x00007200)
#define BCM2837_DMA3_REGS_BASE	(BCM2837_PERIPHERALS_BASE + 0x00007300)
#define BCM2837_DMA4_REGS_BASE	(BCM2837_PERIPHERALS_BASE + 0x00007400)
#define BCM2837_DMA5_REGS_BASE	(BCM2837_PERIPHERALS_BASE + 0x00007500)
#define BCM2837_DMA6_REGS_BASE	(BCM2837_PERIPHERALS_BASE + 0x00007600)
#define BCM2837_DMA7_REGS_BASE	(BCM2837_PERIPHERALS_BASE + 0x00007700)
#define BCM2837_DMA8_REGS_BASE	(BCM2837_PERIPHERALS_BASE + 0x00007800)
#define BCM2837_DMA9_REGS_BASE	(BCM2837_PERIPHERALS_BASE + 0x00007900)
#define BCM2837_DMA10_REGS_BASE	(BCM2837_PERIPHERALS_BASE + 0x00007a00)
#define BCM2837_DMA11_REGS_BASE	(BCM2837_PERIPHERALS_BASE + 0x00007b00)
#define BCM2837_DMA12_REGS_BASE	(BCM2837_PERIPHERALS_BASE + 0x00007c00)
#define BCM2837_DMA13_REGS_BASE	(BCM2837_PERIPHERALS_BASE + 0x00007d00)
#define BCM2837_DMA14_REGS_BASE	(BCM2837_PERIPHERALS_BASE + 0x00007e00)
#define BCM2837_DMA15_REGS_BASE	(BCM2837_PERIPHERALS_BASE + 0x00e05000)
#define BCM2837_DMA_INT_STATUS_BASE (BCM2837_PERIPHERALS_BASE + 0x00007fe0)
#define BCM2837_DMA_ENABLE_BASE (BCM2837_PERIPHERALS_BASE + 0x00007ff0)

#define BCM2837_DMA_NUMCHANNELS	16
#define BCM2837_DMA_MAXCBRECORDS	4096


//USB controller
#define DWC_REGS_BASE		(BCM2837_PERIPHERALS_BASE + 0x00980000)
#define DWC_NUM_CHANNELS 	8

#define DWC_CHANNEL0_BASE	(DWC_REGS_BASE + 0x500)
#define DWC_CHANNEL1_BASE	(DWC_REGS_BASE + 0x520)
#define DWC_CHANNEL2_BASE	(DWC_REGS_BASE + 0x540)
#define DWC_CHANNEL3_BASE	(DWC_REGS_BASE + 0x560)
#define DWC_CHANNEL4_BASE	(DWC_REGS_BASE + 0x580)
#define DWC_CHANNEL5_BASE	(DWC_REGS_BASE + 0x5A0)
#define DWC_CHANNEL6_BASE	(DWC_REGS_BASE + 0x5C0)
#define DWC_CHANNEL7_BASE	(DWC_REGS_BASE + 0x5E0)

#define DWC_CHANNEL_REG_CHARACTERISTICS		0x0
#define DWC_CHANNEL_REG_SPLITCONTROL		0x4
#define DWC_CHANNEL_REG_INTERRUPTS			0x8
#define DWC_CHANNEL_REG_INTERRUPTMASK		0xC
#define DWC_CHANNEL_REG_TRANSFER			0x10
#define DWC_CHANNEL_REG_DMAADDRESS			0x14
#define DWC_CHANNEL_REG_RESERVED1			0x18
#define DWC_CHANNEL_REG_RESERVED2			0x1C


//SD/MMC controller
#define BCM2837_EMMC_BASE		(BCM2837_PERIPHERALS_BASE + 0x00300000)
#define BCM2837_SDHOST_BASE		(BCM2837_PERIPHERALS_BASE + 0x00202000)


#ifndef __ASSEMBLY__

typedef struct {
	u32 mailbox0write;
	u32 mailbox1write;
	u32 mailbox2write;
	u32 mailbox3write;
} armlocalregisters_mailboxwrite_t __attribute__((packed));


typedef struct {
	u32 mailbox0readclear;
	u32 mailbox1readclear;
	u32 mailbox2readclear;
	u32 mailbox3readclear;
} armlocalregisters_mailboxreadclear_t __attribute__((packed));


#endif // __ASSEMBLY__

#endif //__BCM2837_H__
